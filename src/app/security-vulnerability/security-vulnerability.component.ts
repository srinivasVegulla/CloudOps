import { Component, OnInit } from '@angular/core';
import { CopsService } from '../service.component';

@Component({
  selector: 'cops-security-vulnerability',
  templateUrl: './security-vulnerability.component.html',
  styleUrls: ['./security-vulnerability.component.scss']
})
export class SecurityVulnerabilityComponent implements OnInit {

  displayRows;
  //securityVulnerabilitiesData;
  columns = [ 'ticketID', 'Vulnerability', 'Raisedtime'];
  displayColumns = [
    {"displayName": "Ticket ID", "width": "20" , "key": "ticketID"},
    {"displayName": "Vulnerabilty type", "width": "50", "key": "Vulnerability"},
    {"displayName": "Raised Date", "width": "30" , "key": "Raisedtime"}
  ];
  securityVulnerabilitiesData;
  responseData;
  securityVulnerabilitiesDataXX = [
    {"vulnerabilty": "Certificate Common Name Mismatch", "occurence": "14"},
    {"vulnerabilty": "SSL SelfSigned Certificate", "occurence": "6"},
    {"vulnerabilty": "HTTP Certificate", "occurence": "8"},
    {"vulnerabilty": "Generic TCP transport", "occurence": "9"},
    {"vulnerabilty": "UNIX Server", "occurence": "3"},
    {"vulnerabilty": "Certificate Common Name Mismatch", "occurence": "14"},
    {"vulnerabilty": "SSL SelfSigned Certificate", "occurence": "6"},
    {"vulnerabilty": "HTTP Certificate", "occurence": "8"},
    {"vulnerabilty": "Generic TCP transport", "occurence": "9"},
    {"vulnerabilty": "UNIX Server", "occurence": "3"},
  ];

  constructor(private copsService:CopsService) { }

  ngOnInit() {
    /* this.displayRows = this.rows.splice(0,5); */
    this.getSecurityVulnurablitiesData();
  }

  getSecurityVulnurablitiesData(){
    this.copsService.getSecurityVulnurablitiesData().subscribe((response)=>{      
      this.securityVulnerabilitiesData = response["hits"]["hits"];
      let data = [];
      for (let i = 0; i < this.securityVulnerabilitiesData.length; i++) {
        data.push(this.securityVulnerabilitiesData[i]["_source"]);
      }
      this.responseData = data;
      this.displayRows = data.splice(0,8);
    });
  }
  getValue(row, column) {
    let key = column['key'];
    return row[key];
  }

}
